---
- name: Update local inventory file
  hosts: local

  tasks:
    - name: Create variables file from terraform output EC2 outputs
      shell: terraform output |tr '=' ':' > ../../ansible/terraform_outputs.var
      args:
        chdir: ../terraform/EC2/
    - name: Add variables from terraform S3 outputs
      shell: terraform output |tr '=' ':' >> ../../ansible/terraform_outputs.var
      args:
        chdir: ../terraform/S3/
    - name: Load the terraform output variables
      include_vars:
        file: terraform_outputs.var
    - name: Apply inventory template
      template:
        src: templates/inventario.j2
        dest: inventario
    - name: Apply ssh config template
      template:
        src: templates/ssh_cfg.j2
        dest: ../ssh.cfg
    - name: Reload inventory file
      meta: refresh_inventory

- name: Set up bastion host
  hosts: bastion
  become: True
  vars_files:
    - terraform_outputs.var

  tasks:
    - name: Install web server group
      yum:
        name: "@web-server"
    - name: Apply httpd config file for reverse proxy virtual host
      template:
        src: templates/registry_ssl.j2
        dest: /etc/httpd/conf.d/registry_ssl.conf
    - name: Make directory to store web public certificates
      file:
        path: /etc/httpd/tls/certs
        state: directory
        mode: 0755
    - name: Make directory to store web private certificates keys
      file:
        path: /etc/httpd/tls/private
        state: directory
        mode: 0700
    - name: Add TLS public certificate file for virtual host {{ groups['bastion'][0] }}
      copy:
        src: files/registry.crt
        dest: /etc/httpd/tls/certs/
        mode: 0664
    - name: Add TLS private certificate file for virtual host {{ groups['bastion'][0] }}
      copy:
        src: files/registry.key
        dest: /etc/httpd/tls/private
        mode: 0600
    - name: Enable and start httpd service
      service:
        name: httpd
        state: started
        enabled: True

- name: Setup registry server
  hosts: registry
  become: True
  vars_files:
    - terraform_outputs.var

  tasks:
    - name: Install EPEL repository on RedHat
      yum:
        name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
        state: present
      when: ansible_distribution == 'RedHat'
    - name: Install EPEL repository on CentOS
      yum:
        name: epel-release
        state: present
      remote_user: centos
      when: ansible_distribution == 'CentOS'
    - name: Install docker and docker compose
      yum:
        name: docker, docker-compose
        state: present
    - name: Enable and start docker service
      service:
        name: docker
        state: started
        enabled: True
    - name: Stat local installer package
      stat:
        path: /tmp/{{ installer_package }}
      register: installer
    - name: Download harbor installer package
      get_url:
        url: https://storage.googleapis.com/harbor-releases/{{ installer_package }}
        dest: /tmp/
      when: not installer.stat.exists
    - name: Unpack harbor installer
      unarchive:
        src: /tmp/{{ installer_package }}
        dest: /opt
        remote_src: True
    - name: Make directory to hold certificates
      file:
        path: /registry_certs
        state: directory
        mode: 0400
    - name: Copy certificate file
      copy:
        src: files/registry.crt
        dest: /registry_certs
    - name: Copy key file
      copy:
        src: files/registry.key
        dest: /registry_certs
        mode: 0600
    - name: Add harbor config file from template
      template:
        src: templates/harbor.j2
        dest: "{{ harbor_path }}/harbor.cfg"
        mode: 0600
    - name: Apply Storage backend template
      template:
       src: templates/config.j2
       dest: "{{ harbor_path }}/common/templates/registry/config.yml"
       mode: 0600
    - name: Run installation script
      command: ./install.sh
      args:
        chdir: "{{ harbor_path }}"
        creates: /data/database/postmaster.pid
...
